{"ast":null,"code":"// src/api/products.js\nconst API_BASE_URL = 'http://localhost:3000/api';\n\n// Helper function to process the response\nasync function processResponse(response) {\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const contentType = response.headers.get('content-type');\n  if (!contentType || !contentType.includes('application/json')) {\n    throw new TypeError('Received non-JSON response from server');\n  }\n  return await response.json();\n}\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/products`);\n    return await processResponse(response);\n  } catch (error) {\n    console.error(\"Could not fetch products:\", error);\n    throw error;\n  }\n};\n\n// Fetch a single product by ID\nexport const fetchProductById = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/products/${id}`);\n    return await processResponse(response);\n  } catch (error) {\n    console.error(`Could not fetch product with id ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","processResponse","response","ok","Error","contentType","headers","get","includes","TypeError","json","fetchProducts","fetch","error","console","fetchProductById","id"],"sources":["C:/Users/Admin/tshirtshop/client/src/api/products.js"],"sourcesContent":["// src/api/products.js\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\n// Helper function to process the response\r\nasync function processResponse(response) {\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  const contentType = response.headers.get('content-type');\r\n  if (!contentType || !contentType.includes('application/json')) {\r\n    throw new TypeError('Received non-JSON response from server');\r\n  }\r\n  return await response.json();\r\n}\r\n\r\n// Fetch all products\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/products`);\r\n    return await processResponse(response);\r\n  } catch (error) {\r\n    console.error(\"Could not fetch products:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single product by ID\r\nexport const fetchProductById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/products/${id}`);\r\n    return await processResponse(response);\r\n  } catch (error) {\r\n    console.error(`Could not fetch product with id ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,eAAeC,eAAeA,CAACC,QAAQ,EAAE;EACvC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EACxD,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;IAC7D,MAAM,IAAIC,SAAS,CAAC,wCAAwC,CAAC;EAC/D;EACA,OAAO,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAC9B;;AAEA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMU,KAAK,CAAE,GAAEZ,YAAa,WAAU,CAAC;IACxD,OAAO,MAAMC,eAAe,CAACC,QAAQ,CAAC;EACxC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC5C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMU,KAAK,CAAE,GAAEZ,YAAa,aAAYgB,EAAG,EAAC,CAAC;IAC9D,OAAO,MAAMf,eAAe,CAACC,QAAQ,CAAC;EACxC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAE,mCAAkCG,EAAG,GAAE,EAAEH,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}